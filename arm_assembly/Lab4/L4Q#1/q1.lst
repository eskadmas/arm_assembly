


ARM Macro Assembler    Page 1 


    1 00000000         ; THE SOLUTION OF LAB 4 QUESTION #1
    2 00000000         
    3 00000000                 AREA             MyData, DATA, READWRITE
    4 00000000         
    5 00000000         ;res SPACE 2000       ; A suitable block of memory in da
                       ta area
    6 00000000         
    7 00000000                 AREA             MyCode, CODE, READONLY
    8 00000000                 ENTRY
    9 00000000         
   10 00000000         START
   11 00000000 EB000046        BL               MAIN
   12 00000004         
   13 00000004         STOP
   14 00000004 E3A0B018        MOV              R11, #0x18  ; angel_SWIreason_R
                                                            eportException
   15 00000008 E59FC198        LDR              R12, =0x20026 ; ADP_Stopped_App
                                                            licationExit
   16 0000000C EF123456        SVC              #0x123456   ; ARM semihosting (
                                                            formerly SWI)
   17 00000010         
   18 00000010         Price_list
   19 00000010         
   20 00000010 00000004 
              00000014 
              00000006 
              0000000F 
              00000007 
              0000000A 
              0000000A 
              00000005 
              00000010 
              00000008         DCD              0x004, 20, 0x006, 15, 0x007, 10
, 0x00A, 5, 0x010, 8 
                                                            ; These values are 
                                                            stored in memory an
                                                            d they can be addre
                                                            ssed 
   21 00000038 00000012 
              00000007 
              00000016 
              00000016 
              00000017 
              00000011 
              00000018 
              00000026 
              0000001A 
              00000016         DCD              0x012, 7, 0x016, 22, 0x017, 17,
 0x018, 38, 0x01A, 22 
                                                            ; with the label va
                                                            lue «Price_list» 
   22 00000060 0000001B 
              00000022 
              0000001E 
              0000000B 
              00000022 
              00000003 
              00000023 
              00000009 



ARM Macro Assembler    Page 2 


              00000025 
              00000028         DCD              0x01B, 34, 0x01E, 11, 0x022, 3,
 0x023, 9, 0x025, 40
   23 00000088 00000027 
              0000000C 
              00000028 
              0000000B 
              0000002C 
              0000002D 
              0000002D 
              0000000A 
              00000031 
              00000028         DCD              0x027, 12, 0x028, 11, 0x02C, 45
, 0x02D, 10, 0x031, 40
   24 000000B0 00000033 
              0000002D 
              00000035 
              00000009 
              00000036 
              0000000B 
              00000039 
              0000000C 
              0000003C 
              00000013         DCD              0x033, 45, 0x035, 9, 0x036, 11,
 0x039, 12, 0x03C, 19
   25 000000D8 0000003E 
              00000001 
              00000041 
              00000014 
              00000042 
              0000001E 
              00000045 
              0000000C 
              00000047 
              00000007         DCD              0x03E, 1, 0x041, 20, 0x042, 30,
 0x045, 12, 0x047, 7
   26 00000100         
   27 00000100 00000022 
              00000004 
              00000006 
              00000001 
              0000003E 
              0000000A 
              00000017 
              00000002 Item_list
                               DCD              0x022, 4, 0x006, 1, 0x03E, 10, 
0x017, 2 
                                                            ; The list of items
                                                             to buy
   28 00000120         
   29 00000120         MAIN
   30 00000120         ;LDR R2, [R1] ; Load R2 with contents of memory location
                        pointed by contents of R1
   31 00000120         
   32 00000120 E59F0084        LDR              R0, =Price_list ; An address of
                                                             the 1st element in
                                                             the Price_list tab
                                                            le is loaded into R
                                                            0



ARM Macro Assembler    Page 3 


   33 00000124 E59F1084        LDR              R1, =Item_list ; An address of 
                                                            the 1st element in 
                                                            the Item_list table
                                                             is loaded into R1
   34 00000128         ;LDR R2, =res
   35 00000128 E3A05000        MOV              R5, #0      ; Counter Register 
                                                            that counts the num
                                                            ber of Item_list ta
                                                            ble elements
   36 0000012C         
   37 0000012C         Outer
   38 0000012C E3A03000        MOV              R3, #0      ; First Index of Pr
                                                            ice_list, R3 will a
                                                            lways contain the 1
                                                            st index of a speci
                                                            fic range
   39 00000130 E3A0401D        MOV              R4, #29     ; Last Index of Pri
                                                            ce_list, R4 will al
                                                            ways contain the la
                                                            st index of a speci
                                                            fic range 
   40 00000134 E7917185        LDR              R7, [R1, R5, LSL #3] ; The 1st 
                                                            Item_code in the It
                                                            em_list table, whic
                                                            h will be searched 
                                                            in Price_list table
                                                            
   41 00000138         
   42 00000138         Inner
   43 00000138 E0846003        ADD              R6, R4, R3  ; The sum of the 1s
                                                            t and the last Inde
                                                            xes
   44 0000013C E1A060A6        MOV              R6, R6, LSR #1 ; R6 = R6/2, R6 
                                                            will always contain
                                                             the middle index o
                                                            f a specific range
   45 00000140 E7908186        LDR              R8, [R0, R6, LSL #3] ; The midd
                                                            le Item_code in the
                                                             Price_list table i
                                                            s loaded into R8
   46 00000144         
   47 00000144 E1570008        CMP              R7, R8      ; Comparing an Item
                                                            _code of Item_list(
                                                            it is in R7) with t
                                                            he meddle Item_code
                                                             of the Price_list 
                                                            (it is in R8)
   48 00000148 0A000001        BEQ              L1          ; Branch if Equal
   49 0000014C 3A000009        BLO              L2          ; Branch if Lower
   50 00000150 8A00000C        BHI              L3          ; Brach if Higher
   51 00000154         
   52 00000154         L1
   53 00000154 E1A0C085        MOV              R12, R5, LSL #1
   54 00000158 E28CC001        ADD              R12, R12, #1 ; R12 is a pointer
                                                             to acces the quant
                                                            itiy of each item
   55 0000015C E791910C        LDR              R9, [R1, R12, LSL #2] ; The qua
                                                            ntity of the 1st it
                                                            em



ARM Macro Assembler    Page 4 


   56 00000160 E1A06086        MOV              R6, R6, LSL #1
   57 00000164 E2866001        ADD              R6, R6, #1  ; Here, R6 is a poi
                                                            nter to access the 
                                                            price of an item
   58 00000168 E790B106        LDR              R11, [R0, R6, LSL #2] ; The pri
                                                            ce of the middle el
                                                            ement of the Price_
                                                            list
   59 0000016C E00C0B99        MUL              R12, R9, R11 ; An expense of a 
                                                            given item
   60 00000170 E08AA00C        ADD              R10, R10, R12 ; Add the expense
                                                             to R10, and the to
                                                            tal sum of expenses
                                                             will be stored in 
                                                            R10
   61 00000174 EA000007        B                Final
   62 00000178         
   63 00000178         L2
   64 00000178 E2466001        SUB              R6, R6, #1  ; The new last inde
                                                            x of an element
   65 0000017C E1A04006        MOV              R4, R6      ; Moves the new las
                                                            t index to R4
   66 00000180 E7908184        LDR              R8, [R0, R4, LSL #3] ; The new 
                                                            last element of the
                                                             Price_list
   67 00000184 EAFFFFEB        B                Inner
   68 00000188         
   69 00000188         L3
   70 00000188 E2866001        ADD              R6, R6, #1  ; The new first ind
                                                            ex of an element 
   71 0000018C E1A03006        MOV              R3, R6      ; Moves the new fir
                                                            st index to R3
   72 00000190 E7908183        LDR              R8, [R0, R3, LSL #3] ; The new 
                                                            first element of th
                                                            e Price_list
   73 00000194 EAFFFFE7        B                Inner
   74 00000198         
   75 00000198         Final
   76 00000198 E2855001        ADD              R5, R5, #1
   77 0000019C E3550004        CMP              R5, #4      ; R5 is a counter o
                                                            f the number of Ite
                                                            m_list elements
   78 000001A0 3AFFFFE1        BLO              Outer
   79 000001A4         
   80 000001A4 E12FFF1E        BX               LR
   81 000001A8         
   82 000001A8                 END
              00020026 
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\q1.d -o.\q1.o -IC:\Kei
l\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --predefin
e="__EVAL SETA 1" --list=.\q1.lst Q1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 3 in file Q1.s
   Uses
      None
Comment: MyData unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Final 00000198

Symbol: Final
   Definitions
      At line 75 in file Q1.s
   Uses
      At line 61 in file Q1.s
Comment: Final used once
Inner 00000138

Symbol: Inner
   Definitions
      At line 42 in file Q1.s
   Uses
      At line 67 in file Q1.s
      At line 73 in file Q1.s

Item_list 00000100

Symbol: Item_list
   Definitions
      At line 27 in file Q1.s
   Uses
      At line 33 in file Q1.s
Comment: Item_list used once
L1 00000154

Symbol: L1
   Definitions
      At line 52 in file Q1.s
   Uses
      At line 48 in file Q1.s
Comment: L1 used once
L2 00000178

Symbol: L2
   Definitions
      At line 63 in file Q1.s
   Uses
      At line 49 in file Q1.s
Comment: L2 used once
L3 00000188

Symbol: L3
   Definitions
      At line 69 in file Q1.s
   Uses
      At line 50 in file Q1.s
Comment: L3 used once
MAIN 00000120

Symbol: MAIN
   Definitions
      At line 29 in file Q1.s
   Uses
      At line 11 in file Q1.s
Comment: MAIN used once
MyCode 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: MyCode
   Definitions
      At line 7 in file Q1.s
   Uses
      None
Comment: MyCode unused
Outer 0000012C

Symbol: Outer
   Definitions
      At line 37 in file Q1.s
   Uses
      At line 78 in file Q1.s
Comment: Outer used once
Price_list 00000010

Symbol: Price_list
   Definitions
      At line 18 in file Q1.s
   Uses
      At line 32 in file Q1.s
Comment: Price_list used once
START 00000000

Symbol: START
   Definitions
      At line 10 in file Q1.s
   Uses
      None
Comment: START unused
STOP 00000004

Symbol: STOP
   Definitions
      At line 13 in file Q1.s
   Uses
      None
Comment: STOP unused
12 symbols
346 symbols in table
