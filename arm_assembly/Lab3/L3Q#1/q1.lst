


ARM Macro Assembler    Page 1 


    1 00000000         ; THE SOLUTION OF LAB3 QUESTION #1
    2 00000000         
    3 00000000                 AREA             cmpop, CODE, READONLY
    4 00000000         
    5 00000000         ; Name this block of code as cmpop
    6 00000000                 ENTRY                        ; Mark first instru
                                                            ction to execute
    7 00000000         
    8 00000000         Start
    9 00000000 EB000003        BL               Task1       ; Branch to first s
                                                            ubroutine
   10 00000004 EB00000B        BL               Task2       ; Branch to second 
                                                            subroutine
   11 00000008         Stop
   12 00000008 E3A00018        MOV              R0, #0x18   ; angel_SWIreason_R
                                                            eportException
   13 0000000C E59F1088        LDR              R1, =0x20026 ; ADP_Stopped_Appl
                                                            icationExit
   14 00000010 EF123456        SVC              #0x123456   ; ARM semihosting (
                                                            formerly SWI)
   15 00000014         
   16 00000014         Task1
   17 00000014         
   18 00000014 E3A000C8        MOV              R0, #200    ; Set up parameters
                                                            
   19 00000018 E3A01005        MOV              R1, #5
   20 0000001C E3A02009        MOV              R2, #9
   21 00000020 E3A03064        MOV              R3, #100
   22 00000024 E3A04006        MOV              R4, #6
   23 00000028 E3A05006        MOV              R5, #6
   24 0000002C E3A06014        MOV              R6, #20
   25 00000030 E3A0700A        MOV              R7, #10
   26 00000034         
   27 00000034 E12FFF1E        BX               LR
   28 00000038         
   29 00000038         Task2
   30 00000038 E1500001        CMP              R0, R1      ; CMP instruction s
                                                            ubtracts the value 
                                                            of R1 from R0, but 
                                                            does not place the 
                                                            result in any regis
                                                            ter
   31 0000003C 0A000002        BEQ              Equal       ; If R0 = R1, it ju
                                                            mps to the label Eq
                                                            ual
   32 00000040 E0808001        ADD              R8, R0, R1  ; Add R0 and R1 and
                                                             puts the result in
                                                             R8
   33 00000044         ;UDIV R8, R8, #2  ; R8 = R8/2
   34 00000044 E1A080A8        MOV              R8, R8, LSR #1 ; R8 = R8/2
   35 00000048 EA000000        B                CMP2
   36 0000004C         
   37 0000004C         Equal
   38 0000004C E0080190        MUL              R8, R0, R1  ; R8 = R0 * R1
   39 00000050         
   40 00000050 E1520003 
                       CMP2    CMP              R2, R3      ; CMP instruction s
                                                            ubtracts the value 
                                                            of R3 from R2, but 



ARM Macro Assembler    Page 2 


                                                            does not place the 
                                                            result in any regis
                                                            ter
   41 00000054 0A000002        BEQ              Equal1      ; If R2 = R3, it ju
                                                            mps to the label Eq
                                                            ual1
   42 00000058 E0829003        ADD              R9, R2, R3  ; Add R2 and R3 and
                                                             puts the result in
                                                             R9
   43 0000005C         ;UDIV R9, R9, #2  ; R9 = R9/2
   44 0000005C E1A090A9        MOV              R9, R9, LSR #1 ; R9 = R9/2
   45 00000060 EA000000        B                CMP3
   46 00000064         
   47 00000064         Equal1
   48 00000064 E0090392        MUL              R9, R2, R3  ; R9 = R2 * R3
   49 00000068         
   50 00000068 E1540005 
                       CMP3    CMP              R4, R5      ; CMP instruction s
                                                            ubtracts the value 
                                                            of R5 from R4, but 
                                                            does not place the 
                                                            result in any regis
                                                            ter
   51 0000006C 0A000002        BEQ              Equal2      ; If R4 = R5, it ju
                                                            mps to the label Eq
                                                            ual2
   52 00000070 E084A005        ADD              R10, R4, R5 ; Add R4 and R5 and
                                                             puts the result in
                                                             R10
   53 00000074         ;UDIV R10, R10, #2  ; R10 = R10/2
   54 00000074 E1A0A0AA        MOV              R10, R10, LSR #1 ; R10 = R10/2
   55 00000078 EA000000        B                CMP4
   56 0000007C         
   57 0000007C         Equal2
   58 0000007C E00A0594        MUL              R10, R4, R5 ; R10 = R4 * R5
   59 00000080         
   60 00000080 E1560007 
                       CMP4    CMP              R6, R7      ; CMP instruction s
                                                            ubtracts the value 
                                                            of R7 from R6, but 
                                                            does not place the 
                                                            result in any regis
                                                            ter
   61 00000084 0A000002        BEQ              Equal3      ; If R6 = R7, it ju
                                                            mps to the label Eq
                                                            ual3
   62 00000088 E086B007        ADD              R11, R6, R7 ; Add R6 and R7 and
                                                             puts the result in
                                                             R11
   63 0000008C         ;UDIV r11, r11, #2  ; R11 = R11/2
   64 0000008C E1A0B0AB        MOV              R11, R11, LSR #1 ; R11 = R11/2 
                                                            
   65 00000090 E12FFF1E        BX               LR
   66 00000094         
   67 00000094         Equal3
   68 00000094 E00B0796        MUL              R11, R6, R7 ; R11 = R6 * R7
   69 00000098         
   70 00000098 E12FFF1E        BX               LR
   71 0000009C         



ARM Macro Assembler    Page 3 


   72 0000009C                 END                          ; Mark end of file
              00020026 
Command Line: --debug --xref --apcs=interwork --depend=.\q1.d -o.\q1.o -IC:\Kei
l\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --predefin
e="__EVAL SETA 1" --list=.\q1.lst Q1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CMP2 00000050

Symbol: CMP2
   Definitions
      At line 40 in file Q1.s
   Uses
      At line 35 in file Q1.s
Comment: CMP2 used once
CMP3 00000068

Symbol: CMP3
   Definitions
      At line 50 in file Q1.s
   Uses
      At line 45 in file Q1.s
Comment: CMP3 used once
CMP4 00000080

Symbol: CMP4
   Definitions
      At line 60 in file Q1.s
   Uses
      At line 55 in file Q1.s
Comment: CMP4 used once
Equal 0000004C

Symbol: Equal
   Definitions
      At line 37 in file Q1.s
   Uses
      At line 31 in file Q1.s
Comment: Equal used once
Equal1 00000064

Symbol: Equal1
   Definitions
      At line 47 in file Q1.s
   Uses
      At line 41 in file Q1.s
Comment: Equal1 used once
Equal2 0000007C

Symbol: Equal2
   Definitions
      At line 57 in file Q1.s
   Uses
      At line 51 in file Q1.s
Comment: Equal2 used once
Equal3 00000094

Symbol: Equal3
   Definitions
      At line 67 in file Q1.s
   Uses
      At line 61 in file Q1.s
Comment: Equal3 used once
Start 00000000

Symbol: Start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 8 in file Q1.s
   Uses
      None
Comment: Start unused
Stop 00000008

Symbol: Stop
   Definitions
      At line 11 in file Q1.s
   Uses
      None
Comment: Stop unused
Task1 00000014

Symbol: Task1
   Definitions
      At line 16 in file Q1.s
   Uses
      At line 9 in file Q1.s
Comment: Task1 used once
Task2 00000038

Symbol: Task2
   Definitions
      At line 29 in file Q1.s
   Uses
      At line 10 in file Q1.s
Comment: Task2 used once
cmpop 00000000

Symbol: cmpop
   Definitions
      At line 3 in file Q1.s
   Uses
      None
Comment: cmpop unused
12 symbols
345 symbols in table
